name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker to use Minikube's environment
      run: |
        echo "Configuring Docker to use Minikube's daemon..."
        minikube docker-env --shell powershell | Invoke-Expression

    - name: Build Docker image
      run: |
        docker build -t k8s-demo-app:latest .
        echo "Docker image built successfully"

    - name: Deploy to Minikube
      run: |
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/pvc.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        echo "Deployed to Minikube"

    - name: Wait for deployments to be ready
      run: |
        kubectl -n scd-project rollout status deployment/k8s-demo-app
        kubectl -n scd-project rollout status deployment/mongo
        echo "Deployments are ready"

    - name: Show application URL
      run: |
        echo "Your application is available at:"
        # Run for max 5 seconds then terminate
        $processInfo = Start-Process -FilePath "minikube" -ArgumentList "service -n scd-project k8s-demo-service --url" -NoNewWindow -PassThru
        Start-Sleep -Seconds 5
        if (-not $processInfo.HasExited) {
            Stop-Process -Id $processInfo.Id -Force
        }
        
        # Display URL directly without depending on minikube service command
        $nodePort = kubectl get service -n scd-project k8s-demo-service -o jsonpath="{.spec.ports[0].nodePort}"
        echo "Application is available at: http://127.0.0.1:$nodePort" 